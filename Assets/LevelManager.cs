using UnityEngine;

public class LevelManager : MonoBehaviour
{
    [Header("References")]
    [SerializeField] private Transform ship;     // The ship, normally placed at (0,0,0)
    [SerializeField] private Transform planet;   // The planet generated by your asset

    [Header("Orbit Settings")]
    [SerializeField] private float orbitSpeed = 10f;   // Orbit speed in degrees per second
    [SerializeField] private float orbitRadius = 50f;  // Distance from the ship
    [SerializeField] private Vector3 orbitAxis = Vector3.up; // Axis of rotation

    private Quaternion initialRotation;
    private float currentAngle;

    private void Start()
    {
        if (planet != null && ship != null)
        {
            initialRotation = planet.rotation;

            // Place the planet at the correct orbit radius
            planet.position = ship.position + new Vector3(orbitRadius, 0f, 0f);
        }
    }

    private void Update()
    {
        if (planet == null || ship == null) return;

        // Advance the angle
        currentAngle += orbitSpeed * Time.deltaTime;

        // Build a rotation around the orbit axis
        Quaternion rotation = Quaternion.AngleAxis(currentAngle, orbitAxis);

        // Compute new position relative to the ship
        Vector3 offset = rotation * (Vector3.right * orbitRadius);
        planet.position = ship.position + offset;

        // Keep the planet from spinning on itself
        planet.rotation = initialRotation;
    }
}
